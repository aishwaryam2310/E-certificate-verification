Project Setup Guide
Prerequisites
Before running the project, ensure the following applications are installed:

Ganache for Windows PC

Metamask Extension (Do NOT create an account yet)

Node.js (latest version recommended)

VSCode (or any preferred IDE)

Step 1: Download and Extract the Project
Download the ZIP file from the provided Drive link "https://drive.google.com/file/d/1t6YohiERxSlA3E39vafL2E3wV33v5QXy/view?usp=sharing"

Extract the contents to a preferred location (recommended: C:/ or Home directory).

Open the extracted project folder in VSCode.

Step 2: Start Ganache
Open Ganache.

Click QuickStart Ethereum.

Step 3: Install Dependencies
Server Setup
Navigate to the server directory.

Run the following command:

npm install
Client Setup
Go back to the root directory, then navigate to the client directory.

Run the following command:

npm install
Step 4: Install Truffle and Ganache Globally
Open Command Prompt (CMD) as Administrator.

Run the following commands:

npm install -g truffle
npm install -g ganache
Step 5: Blockchain Configuration
Navigate to the blockchain directory (inside the root directory).

Run the following commands:

truffle unbox react
truffle init
Modify truffle-config.js:

Open truffle-config.js inside the blockchain folder.

Delete all existing content.

Paste the text from this file: 

module.exports = {
  networks: {
    development: {
      host: "127.0.0.1",
      port: 7545,
      network_id: "*",
    },
  },
  compilers: {
    solc: {
      version: "0.8.0", // Ensure this matches your Certificate.sol version
    },
  },
  // Set default mocha options here, use special reporters, etc.
  mocha: {
    // timeout: 100000
  },
};

Create Certificate.sol contract:

Navigate to blockchain/contracts folder.

Create a new file Certificate.sol.

Paste the content from this file: Certificate.sol.

Create Deployment Script:

Navigate to blockchain/migrations folder.

Create a new file 2_deploy_your_contract.js.

Paste the content from this file: Deployment Script.

Compile and Deploy Smart Contract:

truffle develop
compile --all
migrate --network development --reset
This will generate a contract address and other deployment details.

Step 6: Update Configuration Files
Open CertificateVerification.json

Navigate to blockchain/build/contracts/CertificateVerification.json.

Find the networks section and copy the contract address.

Update Admin.js

Navigate to client/src/Admin.js.

Replace the contract address on Line 14 with the copied address.

Update index.js in Server

Navigate to server/index.js.

Replace the contract address on Line 14 with the copied address.

Copy Blockchain Contracts

Copy the contracts folder from blockchain/build.

Paste it into client/src.

Step 7: Start the Application
Open three terminals in VSCode:

Terminal 1 (Backend Server):

node index.js
Terminal 2 (Frontend Client):

npm start
Step 8: Setup MetaMask
Install MetaMask Extension on Google Chrome.

Setup MetaMask:

Create a new password.

Click on Ethereum Mainnet at the top left corner.

Add a new custom network:

Network Name: Localhost 8545

RPC URL: http://127.0.0.1:7545 (Copy from Ganache)

Chain ID: 1337

Symbol: ETH

Click Save.

Change the network to Localhost 8545.

Import an account:

Click the account toggle in MetaMask.

Select Import Account.

Copy the Private Key from the first account in Ganache and paste it into MetaMask.

Step 9: Test the Application
Open the admin dashboard:

http://localhost:3000/admin
Create a certificate and generate a hash.

Verify the certificate at:

http://localhost:3000
Notes
Ensure Ganache is running before performing blockchain operations.

Use the same network settings in MetaMask as in Ganache.

If facing issues, restart the application and repeat the migration step.

This guide provides a clean, structured, and easy-to-follow approach for setting up and running the project.